{
  "contractName": "DaiToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/servatj/os/real-fund-smartpool/contracts/realfundToken/token/DaiToken.sol\":\"DaiToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/servatj/os/real-fund-smartpool/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x844ba96952d7d7f02e79bc38e1cb46bc946e67ef07ed214a81dbfd8c7305a572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0a93e295b1e4839efc305d714bab9bd6dbbd3438d7f1523d70527a3a10cf1eb\",\"dweb:/ipfs/QmPKq7ERMEsk8vqCTxDwKfcqqEHWGUdN7M6jyj7F3Jr3B3\"]},\"/home/servatj/os/real-fund-smartpool/contracts/realfundToken/libraries/SafeMath.sol\":{\"keccak256\":\"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0da1c7fdf32ad0225980c821ec44eddb0a068dadbd60bb8e987dcff7cfc57fb\",\"dweb:/ipfs/QmYC9SQk4HQTi5MjRtGAFC1q4qrV44JaQk1XTtvqrciefR\"]},\"/home/servatj/os/real-fund-smartpool/contracts/realfundToken/token/DaiToken.sol\":{\"keccak256\":\"0x8abdef3e93a811d29a56b5169ca2aefd56b852c76991798ad367f15d444b8b7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64745f1010b9fda868193a2199374438ec809bf204f32791fba19609036785d8\",\"dweb:/ipfs/QmWXumYXHJFrBkJtMU5k2bUpUqWgMZ66M4Lrysapf6xVV4\"]},\"/home/servatj/os/real-fund-smartpool/contracts/realfundToken/token/ERC20.sol\":{\"keccak256\":\"0x4f70a162fa7f3ec32ecbb95a8395ee3af3959f453df0af86b7b009bfac80f4a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4389569106ae9c28eba8447ac2c6c24316576b9c4ed47300f2a5689b3d001c36\",\"dweb:/ipfs/QmaUbVTpUm5KaKtUJstHvTyP4eTUz3Kx7FA6dkJjBaqQhu\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610c26380380610c268339818101604052602081101561003357600080fd5b505160408051808201825260038082526244414960e81b60208381018281528551808701909652838652908501919091528251929392610074929190610203565b508051610088906004906020840190610203565b50506005805460ff19166012179055506100a233826100a8565b50610296565b6001600160a01b038216610103576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61011c816002546101a260201b6105161790919060201c565b6002556001600160a01b0382166000908152602081815260409091205461014c9183906105166101a2821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156101fc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061024457805160ff1916838001178555610271565b82800160010185558215610271579182015b82811115610271578251825591602001919060010190610256565b5061027d929150610281565b5090565b5b8082111561027d5760008155600101610282565b610981806102a56000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b610173610365565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b0381358116916020810135909116906040013561036b565b6101c36103d4565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b0381351690602001356103dd565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610413565b6100b661042e565b6101576004803603604081101561024957600080fd5b506001600160a01b03813516906020013561048f565b6101576004803603604081101561027557600080fd5b506001600160a01b0381351690602001356104de565b610173600480360360408110156102a157600080fd5b506001600160a01b03813581169160200135166104eb565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061035c338484610577565b50600192915050565b60025490565b6000610378848484610663565b6103ca84336103c5856040518060600160405280602881526020016108b6602891396001600160a01b038a16600090815260016020908152604080832033845290915290205491906107b3565b610577565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161035c9185906103c59086610516565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b600061035c33846103c585604051806060016040528060258152602001610927602591393360009081526001602090815260408083206001600160a01b038d16845290915290205491906107b3565b600061035c338484610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600082820183811015610570576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109036024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b815260040180806020018281038252602281526020018061086e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b81526004018080602001828103825260258152602001806108de6025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b815260040180806020018281038252602381526020018061084b6023913960400191505060405180910390fd5b61072a81604051806060016040528060268152602001610890602691396001600160a01b03861660009081526020819052604090205491906107b3565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107599082610516565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108425760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108075781810151838201526020016107ef565b50505050905090810190601f1680156108345780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122035b1c46068a5172bf476a83bb10e04714430a44d2515255784112d52af1b0e2164736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b610173610365565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b0381358116916020810135909116906040013561036b565b6101c36103d4565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b0381351690602001356103dd565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610413565b6100b661042e565b6101576004803603604081101561024957600080fd5b506001600160a01b03813516906020013561048f565b6101576004803603604081101561027557600080fd5b506001600160a01b0381351690602001356104de565b610173600480360360408110156102a157600080fd5b506001600160a01b03813581169160200135166104eb565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061035c338484610577565b50600192915050565b60025490565b6000610378848484610663565b6103ca84336103c5856040518060600160405280602881526020016108b6602891396001600160a01b038a16600090815260016020908152604080832033845290915290205491906107b3565b610577565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161035c9185906103c59086610516565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b600061035c33846103c585604051806060016040528060258152602001610927602591393360009081526001602090815260408083206001600160a01b038d16845290915290205491906107b3565b600061035c338484610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600082820183811015610570576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109036024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b815260040180806020018281038252602281526020018061086e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b81526004018080602001828103825260258152602001806108de6025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b815260040180806020018281038252602381526020018061084b6023913960400191505060405180910390fd5b61072a81604051806060016040528060268152602001610890602691396001600160a01b03861660009081526020819052604090205491906107b3565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107599082610516565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108425760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108075781810151838201526020016107ef565b50505050905090810190601f1680156108345780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122035b1c46068a5172bf476a83bb10e04714430a44d2515255784112d52af1b0e2164736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "80:146:27:-:0;;;113:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;113:111:27;1923:141:28;;;;;;;;;;;;-1:-1:-1;;;113:111:27;1923:141:28;;;;;;;;;;;;;;;;;;;;;;;;1995:12;;1923:141;;;1995:12;;1923:141;;1995:12;:::i;:::-;-1:-1:-1;2017:16:28;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2043:9:28;:14;;-1:-1:-1;;2043:14:28;2055:2;2043:14;;;-1:-1:-1;185:32:27::1;191:10;203:13:::0;185:5:::1;:32::i;:::-;113:111:::0;80:146;;7671:310:28;-1:-1:-1;;;;;7754:21:28;;7746:65;;;;;-1:-1:-1;;;7746:65:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;7837:24;7854:6;7837:12;;:16;;;;;;:24;;;;:::i;:::-;7822:12;:39;-1:-1:-1;;;;;7892:18:28;;:9;:18;;;;;;;;;;;;:30;;7915:6;;7892:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;7871:18:28;;:9;:18;;;;;;;;;;;:51;;;;7937:37;;;;;;;7871:18;;:9;;7937:37;;;;;;;;;;7671:310;;:::o;874:176:26:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:26:o;80:146:27:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;80:146:27;;;-1:-1:-1;80:146:27;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "80:146:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2129:81:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4163:164;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4163:164:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3172:98;;;:::i;:::-;;;;;;;;;;;;;;;;4787:313;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4787:313:28;;;;;;;;;;;;;;;;;:::i;3031:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5495:211;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5495:211:28;;;;;;;;:::i;3328:117::-;;;;;;;;;;;;;;;;-1:-1:-1;3328:117:28;-1:-1:-1;;;;;3328:117:28;;:::i;2323:85::-;;;:::i;6193:262::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6193:262:28;;;;;;;;:::i;3648:170::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3648:170:28;;;;;;;;:::i;3876:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3876:149:28;;;;;;;;;;:::i;2129:81::-;2198:5;2191:12;;;;;;;;-1:-1:-1;;2191:12:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2166:13;;2191:12;;2198:5;;2191:12;;2198:5;2191:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2129:81;:::o;4163:164::-;4246:4;4262:37;4271:10;4283:7;4292:6;4262:8;:37::i;:::-;-1:-1:-1;4316:4:28;4163:164;;;;:::o;3172:98::-;3251:12;;3172:98;:::o;4787:313::-;4893:4;4909:36;4919:6;4927:9;4938:6;4909:9;:36::i;:::-;4955:117;4964:6;4972:10;4984:87;5020:6;4984:87;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4984:19:28;;;;;;:11;:19;;;;;;;;5004:10;4984:31;;;;;;;;;:87;:35;:87::i;:::-;4955:8;:117::i;:::-;-1:-1:-1;5089:4:28;4787:313;;;;;:::o;3031:81::-;3096:9;;;;3031:81;:::o;5495:211::-;5608:10;5583:4;5629:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5629:32:28;;;;;;;;;;5583:4;;5599:79;;5620:7;;5629:48;;5666:10;5629:36;:48::i;3328:117::-;-1:-1:-1;;;;;3420:18:28;3394:7;3420:18;;;;;;;;;;;;3328:117::o;2323:85::-;2394:7;2387:14;;;;;;;;-1:-1:-1;;2387:14:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2362:13;;2387:14;;2394:7;;2387:14;;2394:7;2387:14;;;;;;;;;;;;;;;;;;;;;;;;6193:262;6286:4;6302:125;6311:10;6323:7;6332:94;6369:15;6332:94;;;;;;;;;;;;;;;;;6344:10;6332:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;6332:32:28;;;;;;;;;;;:94;:36;:94::i;3648:170::-;3734:4;3750:40;3760:10;3772:9;3783:6;3750:9;:40::i;3876:149::-;-1:-1:-1;;;;;3991:18:28;;;3965:7;3991:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3876:149::o;874:176:26:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:26:o;9075:340:28:-;-1:-1:-1;;;;;9176:19:28;;9168:68;;;;-1:-1:-1;;;9168:68:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9254:21:28;;9246:68;;;;-1:-1:-1;;;9246:68:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9325:18:28;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9376:32;;;;;;;;;;;;;;;;;9075:340;;;:::o;6929:472::-;-1:-1:-1;;;;;7034:20:28;;7026:70;;;;-1:-1:-1;;;7026:70:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7114:23:28;;7106:71;;;;-1:-1:-1;;;7106:71:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7208;7230:6;7208:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7208:17:28;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7188:17:28;;;:9;:17;;;;;;;;;;;:91;;;;7312:20;;;;;;;:32;;7337:6;7312:24;:32::i;:::-;-1:-1:-1;;;;;7289:20:28;;;:9;:20;;;;;;;;;;;;:55;;;;7359:35;;;;;;;7289:20;;7359:35;;;;;;;;;;;;;6929:472;;;:::o;1746:187:26:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:26;;;1746:187::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\nimport './ERC20.sol';\n\ncontract DaiToken is ERC20 {\n    constructor(uint256 initialSupply) ERC20(\"DAI\", \"DAI\") public {\n        _mint(msg.sender, initialSupply);\n    }\n}\n",
  "sourcePath": "/home/servatj/os/real-fund-smartpool/contracts/realfundToken/token/DaiToken.sol",
  "ast": {
    "absolutePath": "/home/servatj/os/real-fund-smartpool/contracts/realfundToken/token/DaiToken.sol",
    "exportedSymbols": {
      "DaiToken": [
        11401
      ]
    },
    "id": 11402,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11381,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:27"
      },
      {
        "absolutePath": "/home/servatj/os/real-fund-smartpool/contracts/realfundToken/token/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 11382,
        "nodeType": "ImportDirective",
        "scope": 11402,
        "sourceUnit": 11867,
        "src": "57:21:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11383,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11866,
              "src": "101:5:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11866",
                "typeString": "contract ERC20"
              }
            },
            "id": 11384,
            "nodeType": "InheritanceSpecifier",
            "src": "101:5:27"
          }
        ],
        "contractDependencies": [
          386,
          11866
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11401,
        "linearizedBaseContracts": [
          11401,
          11866,
          386
        ],
        "name": "DaiToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11399,
              "nodeType": "Block",
              "src": "175:49:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11394,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "191:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "191:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11396,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11386,
                        "src": "203:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11393,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11762,
                      "src": "185:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "185:32:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11398,
                  "nodeType": "ExpressionStatement",
                  "src": "185:32:27"
                }
              ]
            },
            "documentation": null,
            "id": 11400,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "444149",
                    "id": 11389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "154:5:27",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                      "typeString": "literal_string \"DAI\""
                    },
                    "value": "DAI"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "444149",
                    "id": 11390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "161:5:27",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                      "typeString": "literal_string \"DAI\""
                    },
                    "value": "DAI"
                  }
                ],
                "id": 11391,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11388,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11866,
                  "src": "148:5:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$11866_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "148:19:27"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11386,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11400,
                  "src": "125:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "125:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "124:23:27"
            },
            "returnParameters": {
              "id": 11392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "175:0:27"
            },
            "scope": 11401,
            "src": "113:111:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11402,
        "src": "80:146:27"
      }
    ],
    "src": "32:195:27"
  },
  "legacyAST": {
    "absolutePath": "/home/servatj/os/real-fund-smartpool/contracts/realfundToken/token/DaiToken.sol",
    "exportedSymbols": {
      "DaiToken": [
        11401
      ]
    },
    "id": 11402,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11381,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:27"
      },
      {
        "absolutePath": "/home/servatj/os/real-fund-smartpool/contracts/realfundToken/token/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 11382,
        "nodeType": "ImportDirective",
        "scope": 11402,
        "sourceUnit": 11867,
        "src": "57:21:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11383,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11866,
              "src": "101:5:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11866",
                "typeString": "contract ERC20"
              }
            },
            "id": 11384,
            "nodeType": "InheritanceSpecifier",
            "src": "101:5:27"
          }
        ],
        "contractDependencies": [
          386,
          11866
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11401,
        "linearizedBaseContracts": [
          11401,
          11866,
          386
        ],
        "name": "DaiToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11399,
              "nodeType": "Block",
              "src": "175:49:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11394,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "191:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "191:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11396,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11386,
                        "src": "203:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11393,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11762,
                      "src": "185:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "185:32:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11398,
                  "nodeType": "ExpressionStatement",
                  "src": "185:32:27"
                }
              ]
            },
            "documentation": null,
            "id": 11400,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "444149",
                    "id": 11389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "154:5:27",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                      "typeString": "literal_string \"DAI\""
                    },
                    "value": "DAI"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "444149",
                    "id": 11390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "161:5:27",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                      "typeString": "literal_string \"DAI\""
                    },
                    "value": "DAI"
                  }
                ],
                "id": 11391,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11388,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11866,
                  "src": "148:5:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$11866_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "148:19:27"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11386,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11400,
                  "src": "125:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "125:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "124:23:27"
            },
            "returnParameters": {
              "id": 11392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "175:0:27"
            },
            "scope": 11401,
            "src": "113:111:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11402,
        "src": "80:146:27"
      }
    ],
    "src": "32:195:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x24243314301CA41A97497970B371A4CC13857cAB",
      "transactionHash": "0x16a457b9ab961831a9ce67e7cdec445f8ca79b260540c10b4d25fc9696f589a0"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-11-21T10:33:58.417Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}